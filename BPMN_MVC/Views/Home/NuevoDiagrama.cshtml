<!-- necessary stylesheets -->
<link rel="stylesheet" href="https://unpkg.com/bpmn-js@3.2.2/dist/assets/diagram-js.css" />
<link rel="stylesheet" href="https://unpkg.com/bpmn-js@3.2.2/dist/assets/bpmn-font/css/bpmn.css" />

<script src="https://unpkg.com/bpmn-js@3.2.2/dist/bpmn-modeler.development.js" type="text/javascript"></script>
<script src="https://unpkg.com/jquery@3.3.1/dist/jquery.js"></script>

<h2>@ViewBag.Message</h2>

@using (Html.BeginForm("NuevoDiagrama", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.ValidationSummary("", new { @class = "text-danger" })
    /*<div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Procesar" />
        </div>
    </div>*/
}
<button id="save-button">Procesar</button>
<input type="text" id="fileName-txtbox">
<button id="zoomin-button">Zoom In</button>
<button id="zoomout-button">Zoom Out</button>
<button id="centrar-button">Centrar Diagrama</button>
<button id="centrarelemento-button">Centrar Elemento</button>
<br>
<hr />
<div id="canvas"></div>

<script type="text/javascript">
    var diagramUrl = '@ViewBag.BPMNDiagramURL';
    //var zoomlevel = 1;
    //alert(diagramUrl);
    var bpmnModeler = new BpmnJS({
        container: '#canvas',
        height: 600,
        keyboard: {
            bindTo: document
        },
        additionalModules: [

        ]
    });

    function exportDiagram() {
        if ($('#fileName-txtbox').val() == '')
            alert('Tienes que especificar el nombre del archivo');
        else {
            alert($('#fileName-txtbox').val());
            bpmnModeler.saveXML({ format: true }, function (err, xml) {
                if (err) {
                    return console.error('could not save BPMN 2.0 diagram', err);
                }
                alert('Diagrama procesado!');
                console.log($('#fileName-txtbox').val(), xml);

                var a = document.createElement("a");
                document.body.appendChild(a);
                a.style = "display: none";
                var blob = new File([xml], $('#fileName-txtbox').val()+".bpmn");
                url = window.URL.createObjectURL(blob);
                a.href = url;
                a.download = blob.name;
                a.click();
                window.URL.revokeObjectURL(url);
            });
        }
    }

    function openDiagram(bpmnXML) {
        // import diagram
        bpmnModeler.importXML(bpmnXML, function (err) {
            if (err) {
                return console.error('could not import BPMN 2.0 diagram', err);
            }
            // access modeler components
            var canvas = bpmnModeler.get('canvas');
            var overlays = bpmnModeler.get('overlays');
            // zoom to fit full viewport
            canvas.zoom('fit-viewport');
            // attach an overlay to a node
            overlays.add('SCAN_OK', 'note', {
                position: {
                    bottom: 0,
                    right: 0
                },
                html: '<div class="diagram-note">Mixed up the labels?</div>'
            });
            // add marker
            canvas.addMarker('SCAN_OK', 'needs-discussion');
        });
    }

    function zoominDiagram() {
        var canvas = bpmnModeler.get('canvas');
        var zoomLevel = canvas.zoom(false);
        if (zoomLevel != 2) {
            canvas.zoom(zoomLevel + 0.2);
            //canvas.zoom(canvas.zoom(false) + 0.2);
        }
    }

    function zoomOutDiagram() {
        var canvas = bpmnModeler.get('canvas');
        var zoomLevel = canvas.zoom(false);
        if (zoomLevel != 0.4) {
            canvas.zoom(zoomLevel - 0.2);
            //canvas.zoom(canvas.zoom(false) - 0.2);
        }
    }

    function centrarDiagram() {
        zoomlevel = 0;
        var canvas = bpmnModeler.get('canvas');
        // zoom to fit full viewport
        canvas.zoom('fit-viewport');
    }

    function centrarElemento() {
        var selectedElements = bpmnModeler.get('selection').get();
        //alert(selectedElements[0].id);
        var canvas = bpmnModeler.get('canvas');
        var currentViewbox = canvas.viewbox();

        var elementMid = {
            x: selectedElements[0].x + selectedElements[0].width / 2,
            y: selectedElements[0].y + selectedElements[0].height / 2
        };

        canvas.viewbox({
            x: elementMid.x - currentViewbox.width / 2,
            y: elementMid.y - currentViewbox.height / 2,
            width: currentViewbox.width,
            height: currentViewbox.height
        });
    }

    // load external diagram file via AJAX and open it
    $.get(diagramUrl, openDiagram, 'text');

    // wire save button
    $('#save-button').click(exportDiagram);
    $('#zoomin-button').click(zoominDiagram);
    $('#zoomout-button').click(zoomOutDiagram);
    $('#centrar-button').click(centrarDiagram);
    $('#centrarelemento-button').click(centrarElemento);
</script>

